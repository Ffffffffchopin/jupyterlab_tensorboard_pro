(self.webpackChunkjupyterlab_tensorboard=self.webpackChunkjupyterlab_tensorboard||[]).push([[69],{69:(e,t,n)=>{"use strict";n.r(t),n.d(t,{addCommands:()=>T,default:()=>x,tensorboardIcon:()=>C});var r=n(343),s=n(698),o=n(992),i=n(794),a=n(850),d=n(168),l=n(797),h=n(629),c=n(337);const u="api/tensorboard",m="tensorboard";var g,p;!function(e){e.startNew=function(e,t){return b.startNew(e,t)},e.listRunning=function(e){return b.listRunning(e)},e.shutdown=function(e,t){return b.shutdown(e,t)},e.shutdownAll=function(e){return b.shutdownAll(e)},e.getUrl=function(e,t){return b.getUrl(e,t)}}(g||(g={}));class b{constructor(e,t,n,r={}){this._isDisposed=!1,this._terminated=new d.Signal(this),this._name=e,this._logdir=t,this._lastReload=n,this.serverSettings=r.serverSettings||c.ServerConnection.makeSettings(),this._url=p.getTensorboardInstanceUrl(this.serverSettings.baseUrl,this._name)}get name(){return this._name}get model(){return{name:this._name,logdir:this._logdir,reload_time:this._lastReload}}get terminated(){return this._terminated}get isDisposed(){return this._isDisposed}dispose(){this._isDisposed||(this.terminated.emit(void 0),this._isDisposed=!0,delete p.running[this._url],d.Signal.clearData(this))}shutdown(){const{name:e,serverSettings:t}=this;return b.shutdown(e,t)}}!function(e){function t(e){e=e||c.ServerConnection.makeSettings();let t=p.getServiceUrl(e.baseUrl),n=p.getTensorboardInstanceRootUrl(e.baseUrl);return c.ServerConnection.makeRequest(t,{},e).then((e=>{if(200!==e.status)throw new c.ServerConnection.ResponseError(e);return e.json()})).then((e=>{if(!Array.isArray(e))throw new Error("Invalid tensorboard data");let t=(0,a.toArray)((0,a.map)(e,(e=>h.URLExt.join(n,e.name))));return(0,a.each)(Object.keys(p.running),(e=>{-1===t.indexOf(e)&&p.running[e].dispose()})),e}))}function n(e,t){t=t||c.ServerConnection.makeSettings();let n=p.getTensorboardUrl(t.baseUrl,e);return c.ServerConnection.makeRequest(n,{method:"DELETE"},t).then((e=>{if(404===e.status)return e.json().then((e=>{console.warn(e.message),p.killTensorboard(n)}));if(204!==e.status)throw new c.ServerConnection.ResponseError(e);p.killTensorboard(n)}))}e.startNew=function(t,n={}){let r=n.serverSettings||c.ServerConnection.makeSettings(),s=p.getServiceUrl(r.baseUrl),o={method:"POST",headers:new Headers({"Content-Type":"application/json"}),body:JSON.stringify({logdir:t})};return c.ServerConnection.makeRequest(s,o,r).then((e=>{if(200!==e.status)throw new c.ServerConnection.ResponseError(e);return e.json()})).then((t=>{let s=t.name,o=t.logdir,i=t.reload_time;return new e(s,o,i,Object.assign(Object.assign({},n),{serverSettings:r}))}))},e.listRunning=t,e.shutdown=n,e.shutdownAll=function(e){return t(e=e||c.ServerConnection.makeSettings()).then((t=>{(0,a.each)(t,(t=>{n(t.name,e)}))}))},e.getUrl=function(e,t){return t=t||c.ServerConnection.makeSettings(),p.getTensorboardInstanceUrl(t.baseUrl,e)}}(b||(b={})),function(e){e.running=Object.create(null),e.getTensorboardUrl=function(e,t){return h.URLExt.join(e,u,t)},e.getServiceUrl=function(e){return h.URLExt.join(e,u)},e.killTensorboard=function(t){e.running[t]&&e.running[t].dispose()},e.getTensorboardInstanceRootUrl=function(e){return h.URLExt.join(e,m)},e.getTensorboardInstanceUrl=function(e,t){return h.URLExt.join(e,m,t)}}(p||(p={}));class f{constructor(e={}){this._models=[],this._tensorboards=new Set,this._isDisposed=!1,this._isReady=!1,this._refreshTimer=-1,this._runningChanged=new d.Signal(this),this.serverSettings=e.serverSettings||c.ServerConnection.makeSettings(),this._readyPromise=this._refreshRunning(),this._refreshTimer=setInterval((()=>{"undefined"!=typeof document&&document.hidden||this._refreshRunning()}),1e4)}get runningChanged(){return this._runningChanged}get isDisposed(){return this._isDisposed}dispose(){this.isDisposed||(this._isDisposed=!0,clearInterval(this._refreshTimer),d.Signal.clearData(this),this._models=[])}get isReady(){return this._isReady}get ready(){return this._readyPromise}running(){return(0,a.iter)(this._models)}startNew(e,t){return g.startNew(e,this._getOptions(t)).then((e=>(this._onStarted(e),e)))}shutdown(e){let t=a.ArrayExt.findFirstIndex(this._models,(t=>t.name===e));if(-1!==t)return this._models.splice(t,1),this._runningChanged.emit(this._models.slice()),g.shutdown(e,this.serverSettings).then((()=>{let t=[];this._tensorboards.forEach((n=>{n.name===e&&(n.dispose(),t.push(n))})),t.forEach((e=>{this._tensorboards.delete(e)}))}))}shutdownAll(){let e=this._models;return e.length>0&&(this._models=[],this._runningChanged.emit([])),this._refreshRunning().then((()=>Promise.all(e.map((e=>g.shutdown(e.name,this.serverSettings).then((()=>{let e=[];this._tensorboards.forEach((t=>{t.dispose(),e.push(t)})),e.forEach((e=>{this._tensorboards.delete(e)}))}))))).then((()=>{}))))}refreshRunning(){return this._refreshRunning()}_onTerminated(e){let t=a.ArrayExt.findFirstIndex(this._models,(t=>t.name===e));-1!==t&&(this._models.splice(t,1),this._runningChanged.emit(this._models.slice()))}_onStarted(e){let t=e.name;this._tensorboards.add(e),-1===a.ArrayExt.findFirstIndex(this._models,(e=>e.name===t))&&(this._models.push(e.model),this._runningChanged.emit(this._models.slice())),e.terminated.connect((()=>{this._onTerminated(t)}))}_refreshRunning(){return g.listRunning(this.serverSettings).then((e=>{if(this._isReady=!0,!l.JSONExt.deepEqual(e,this._models)){let t=e.map((e=>e.name)),n=[];this._tensorboards.forEach((e=>{-1===t.indexOf(e.name)&&(e.dispose(),n.push(e))})),n.forEach((e=>{this._tensorboards.delete(e)})),this._models=e.slice(),this._runningChanged.emit(e)}}))}_getOptions(e={}){return Object.assign(Object.assign({},e),{serverSettings:this.serverSettings})}}var _,w=n(510);class v extends r.IFrame{constructor(e){super({sandbox:["allow-scripts","allow-forms","allow-same-origin"]}),this.addClass("jp-Tensorboard"),this.tensorboard=this._tensorboard=e.model,this.url=g.getUrl(this._tensorboard.name),this.id="jp-Tensorboard-"+_.id++,this.title.label=`Tensorboard ${this._tensorboard.name}`,this.title.icon="jp-Tensorboards-itemIcon",this.title.closable=!0;let t=`Name: Tensorboard ${this._tensorboard.name}\nLogdir: ${this._tensorboard.logdir}`;this.title.caption=t}dispose(){this._tensorboard=null,super.dispose()}onCloseRequest(e){super.onCloseRequest(e),this.dispose()}}class S extends w.Widget{constructor(){super({node:_.createOpenNode()})}getValue(){return this.inputNode.value}get inputNode(){return this.node.getElementsByTagName("input")[0]}}!function(e){e.createOpenNode=function(){let e=document.createElement("div"),t=document.createElement("label");t.textContent="Logdir Path:";let n=document.createElement("input");return n.value="",n.placeholder="/logdir/path/for/tensorboard",e.appendChild(t),e.appendChild(n),e},e.id=0}(_||(_={}));var y=n(1);const C=new(n(802).LabIcon)({name:"jupyterlab-tensorboard:tensorboard",svgstr:'<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n<svg\n   xmlns:dc="http://purl.org/dc/elements/1.1/"\n   xmlns:cc="http://creativecommons.org/ns#"\n   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"\n   xmlns:svg="http://www.w3.org/2000/svg"\n   xmlns="http://www.w3.org/2000/svg"\n   id="svg8"\n   version="1.1"\n   viewBox="0 0 30.31081 32.499828"\n   height="122.83399"\n   width="114.56054">\n  <defs\n     id="defs2" />\n  <metadata\n     id="metadata5">\n    <rdf:RDF>\n      <cc:Work\n         rdf:about="">\n        <dc:format>image/svg+xml</dc:format>\n        <dc:type\n           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />\n        <dc:title></dc:title>\n      </cc:Work>\n    </rdf:RDF>\n  </metadata>\n  <g\n     transform="translate(-77.942529,-177.00005)"\n     id="layer1">\n    <g\n       id="g4550">\n      <path\n         style="fill:#e55b2d;fill-opacity:1"\n         d="m 360.04883,687.87305 v 18.89843 l 32.73047,18.89844 v -18.89844 z m -65.46289,18.89843 v 18.89844 l 16.36523,9.44727 V 716.2207 Z m 49.0957,9.44922 -16.36523,9.44922 v 56.69141 l 16.36523,9.44922 v -37.79493 l 16.36719,9.44922 v -18.89843 l -16.36719,-9.44922 z"\n         transform="scale(0.26458333)"\n         id="path4508" />\n      <path\n         style="fill:#ed8e24;fill-opacity:1"\n         d="m 360.04883,687.87305 -49.09766,28.34765 v 18.89649 l 32.73047,-18.89649 v 18.89649 l 16.36719,-9.44727 z m 49.09765,9.44922 -16.36718,9.44921 v 18.89844 l 16.36718,-9.44922 z m -32.73242,37.79492 -16.36523,9.44922 v 18.89843 l 16.36523,-9.44922 z m -16.36523,28.34765 -16.36719,-9.44922 v 37.79493 l 16.36719,-9.44922 z"\n         transform="scale(0.26458333)"\n         id="path4491" />\n      <path\n         style="fill:#f8bf3c;fill-opacity:1"\n         d="m 360.04883,668.97656 -65.46289,37.79492 16.36523,9.44922 49.09766,-28.34765 32.73047,18.89843 16.36718,-9.44921 z m 0,56.69336 -16.36719,9.44727 16.36719,9.44922 16.36523,-9.44922 z"\n         transform="scale(0.26458333)"\n         id="path4506" />\n    </g>\n  </g>\n</svg>\n'});var R;!function(e){e.createNew="tensorboard:create-new",e.inputDirect="tensorboard:choose-direct",e.open="tensorboard:open",e.close="tensorboard:close"}(R||(R={}));const x={id:"tensorboard",requires:[r.ICommandPalette,i.IFileBrowserFactory],optional:[s.ILauncher,o.IMainMenu,y.IRunningSessionManagers],autoStart:!0,activate:function(e,t,n,s,o,i){let d=new f;const l=new r.WidgetTracker({namespace:"tensorboard"});return T(e,d,l,n,s,o),i&&function(e,t,n){e.add({name:"Tensorboard",running:()=>(0,a.toArray)(n.running()).map((e=>new r(e))),shutdownAll:()=>n.shutdownAll(),refreshRunning:()=>n.refreshRunning(),runningChanged:n.runningChanged});class r{constructor(e){this._model=e}open(){t.commands.execute(R.open,{tb:this._model})}icon(){return C}label(){return`tensorboards/${this._model.name}`}shutdown(){return t.commands.execute(R.close,{tb:this._model}),n.shutdown(this._model.name)}}}(i,e,d),t.addItem({command:R.inputDirect,category:"Tensorboard"}),l}};function T(e,t,n,s,o,i){let{commands:a,serviceManager:d}=e;a.addCommand(R.open,{execute:t=>{const s=t.tb,o=n.find((e=>e.content.tensorboard&&e.content.tensorboard.name===s.name||!1));if(o)return e.shell.activateById(o.id),o;{let t=new v({model:s}),o=new r.MainAreaWidget({content:t});return n.add(o),e.shell.add(o,"main"),e.shell.activateById(o.id),o}}}),a.addCommand(R.close,{execute:e=>{const t=e.tb,r=n.find((e=>e.content.tensorboard&&e.content.tensorboard.name===t.name||!1));r&&(r.dispose(),r.close())}}),a.addCommand(R.inputDirect,{label:()=>"Create a new tensorboard",execute:t=>{(0,r.showDialog)({title:"Input the logdir Path to create a new Tensorboard",body:new S,buttons:[r.Dialog.cancelButton(),r.Dialog.okButton({label:"CREATE"})],focusNodeSelector:"inpute"}).then((t=>{if("CREATE"===t.button.label){const n=t.value;return e.commands.execute(R.createNew,{logdir:n})}}))}}),a.addCommand(R.createNew,{label:e=>e.isPalette?"New Tensorbaord":"Tensorboard",caption:"Start a new tensorboard",icon:e=>e.isPalette?void 0:C,execute:n=>{let o=n.cwd||s.defaultBrowser.model.path;const i=void 0===n.logdir?o:n.logdir;return d.contents.get(i,{type:"directory"}).then((n=>t.startNew(n.path).then((t=>e.commands.execute(R.open,{tb:t.model})))),(()=>(0,r.showDialog)({title:"Cannot create tensorboard.",body:"Directory not found",buttons:[r.Dialog.okButton()]})))}}),o&&o.add({command:R.createNew,category:"Other",rank:2}),i&&i.fileMenu.newMenu.addGroup([{command:R.createNew}],30)}}}]);